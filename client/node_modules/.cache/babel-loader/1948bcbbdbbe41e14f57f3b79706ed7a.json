{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapshot = yield userRef.get();\n  } catch (err) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/Bon/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","UserActionTypes","googleSignInSuccess","googleSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","snapshot","get","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBACc,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CADpB;AAAA,UACKO,IADL,QACKA,IADL;;AAEH,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,GAJD,CAIE,OAAOC,GAAP,EAAY,CAEb;AAED;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMjB,UAAU,CACfO,eAAe,CAACW,oBADD,EAEfR,gBAFe,CAAhB;AAIA;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAMjB,GAAG,CAAC,CACTC,IAAI,CAACc,mBAAD,CADK,CAAD,CAAT;AAGA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport UserActionTypes from './user.types';\n\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions';\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst snapshot = yield userRef.get();\n\t} catch (err) {\n\n\t}\n\t\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(\n\t\tUserActionTypes.GOOGLE_SIGN_IN_START,\n\t\tsignInWithGoogle\n\t)\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart)\n\t])\n}"]},"metadata":{},"sourceType":"module"}