{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/Bon/client/src/components/dropdown/dropdown.component.js\";\nimport React, { Component } from 'react';\nimport './dropdown.styles.scss';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contentWidth: '',\n      contentHeight: ''\n    };\n    this.content = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.content.current.firstChild) {\n      const rect = this.content.current.getBoundingClientRect();\n      this.setState({\n        contentWidth: rect.width,\n        contentHeight: rect.height\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          contentWidth = _this$state.contentWidth,\n          contentHeight = _this$state.contentHeight;\n    const _this$props = this.props,\n          toggle = _this$props.toggle,\n          animateOut = _this$props.animateOut,\n          _this$props$triggerRe = _this$props.triggerRect,\n          x = _this$props$triggerRe.x,\n          y = _this$props$triggerRe.y,\n          width = _this$props$triggerRe.width,\n          height = _this$props$triggerRe.height,\n          children = _this$props.children;\n    const animationState = animateOut ? 'animate-out' : 'animate-in';\n    const childrenWithProps = React.Children.map(children, child => {\n      return React.cloneElement(child, {\n        toggleDropdown: toggle\n      });\n    });\n\n    const renderDropdown = () => {\n      return React.createElement(\"div\", {\n        className: \"drop-down \".concat(animationState),\n        style: {\n          width: \"\".concat(contentWidth, \"px\"),\n          height: \"\".concat(contentHeight, \"px\"),\n          top: \"\".concat(y + height, \"px\"),\n          left: \"\".concat(x - contentWidth + width, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, childrenWithProps));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, renderDropdown());\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/Bon/client/src/components/dropdown/dropdown.component.js"],"names":["React","Component","Dropdown","constructor","props","state","contentWidth","contentHeight","content","createRef","componentDidMount","current","firstChild","rect","getBoundingClientRect","setState","width","height","render","toggle","animateOut","triggerRect","x","y","children","animationState","childrenWithProps","Children","map","child","cloneElement","toggleDropdown","renderDropdown","top","left"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,wBAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,YAAY,EAAE,EADF;AAEZC,MAAAA,aAAa,EAAE;AAFH,KAAb;AAIA,SAAKC,OAAL,GAAeR,KAAK,CAACS,SAAN,EAAf;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,QAAI,KAAKF,OAAL,CAAaG,OAAb,CAAqBC,UAAzB,EAAqC;AACpC,YAAMC,IAAI,GAAG,KAAKL,OAAL,CAAaG,OAAb,CAAqBG,qBAArB,EAAb;AACA,WAAKC,QAAL,CAAc;AACbT,QAAAA,YAAY,EAAEO,IAAI,CAACG,KADN;AAEbT,QAAAA,aAAa,EAAEM,IAAI,CAACI;AAFP,OAAd;AAIA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKb,KADrC;AAAA,UACAC,YADA,eACAA,YADA;AAAA,UACcC,aADd,eACcA,aADd;AAAA,wBAYJ,KAAKH,KAZD;AAAA,UAGPe,MAHO,eAGPA,MAHO;AAAA,UAIPC,UAJO,eAIPA,UAJO;AAAA,8CAKPC,WALO;AAAA,UAMNC,CANM,yBAMNA,CANM;AAAA,UAONC,CAPM,yBAONA,CAPM;AAAA,UAQNP,KARM,yBAQNA,KARM;AAAA,UASNC,MATM,yBASNA,MATM;AAAA,UAWPO,QAXO,eAWPA,QAXO;AAcR,UAAMC,cAAc,GAAGL,UAAU,GAAG,aAAH,GAAmB,YAApD;AAEA,UAAMM,iBAAiB,GAAG1B,KAAK,CAAC2B,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6BK,KAAK,IAAI;AACzD,aAAO7B,KAAK,CAAC8B,YAAN,CAAmBD,KAAnB,EAA0B;AAAEE,QAAAA,cAAc,EAAEZ;AAAlB,OAA1B,CAAP;AACH,KAFsB,CAA1B;;AAIG,UAAMa,cAAc,GAAG,MAAM;AAC5B,aACC;AACF,QAAA,SAAS,sBAAeP,cAAf,CADP;AAEF,QAAA,KAAK,EAAE;AAACT,UAAAA,KAAK,YAAKV,YAAL,OAAN;AAA6BW,UAAAA,MAAM,YAAKV,aAAL,OAAnC;AAA2D0B,UAAAA,GAAG,YAAKV,CAAC,GAAGN,MAAT,OAA9D;AAAmFiB,UAAAA,IAAI,YAAKZ,CAAC,GAAGhB,YAAJ,GAAmBU,KAAxB;AAAvF,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIF;AAAK,QAAA,GAAG,EAAE,KAAKR,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEkB,iBADF,CAJE,CADD;AAUA,KAXD;;AAaH,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEM,cAAc,EADhB,CADD;AAKA;;AA1D+B;;AA8DjC,eAAe9B,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport './dropdown.styles.scss';\n\nclass Dropdown extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontentWidth: '',\n\t\t\tcontentHeight: '',\n\t\t}\n\t\tthis.content = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.content.current.firstChild) {\n\t\t\tconst rect = this.content.current.getBoundingClientRect();\n\t\t\tthis.setState({\n\t\t\t\tcontentWidth: rect.width,\n\t\t\t\tcontentHeight: rect.height,\n\t\t\t})\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst { contentWidth, contentHeight } = this.state;\n\t\tconst { \n\t\t\ttoggle,\n\t\t\tanimateOut,\n\t\t\ttriggerRect: {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t},\n\t\t\tchildren\n\t\t} = this.props;\n\n\t\tconst animationState = animateOut ? 'animate-out' : 'animate-in'\n\n\t\tconst childrenWithProps = React.Children.map(children, child => {\n\t      \t return React.cloneElement(child, { toggleDropdown: toggle })      \n\t    });\n\n\t    const renderDropdown = () => {\n\t    \treturn (\n\t    \t\t<div \n\t\t\t\t\tclassName={`drop-down ${animationState}`} \n\t\t\t\t\tstyle={{width: `${contentWidth}px`, height: `${contentHeight}px`, top: `${y + height}px`, left: `${x - contentWidth + width}px`}}\n\t\t\t\t>\n\t\t\t\t\t<div ref={this.content}>\n\t\t\t\t\t\t{childrenWithProps}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t    \t);\n\t    }\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{renderDropdown()}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}