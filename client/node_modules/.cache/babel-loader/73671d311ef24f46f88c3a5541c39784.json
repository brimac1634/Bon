{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/Bon/src/pages/shop/shop.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithLoader from '../../components/with-loader/with-loader.component';\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nconst CollectionOverviewWithLoader = WithLoader(CollectionsOverview);\nconst CollectionPageWithLoader = WithLoader(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithLoader, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithLoader, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/Bon/src/pages/shop/shop.component.js"],"names":["React","Component","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverview","CollectionPage","WithLoader","mapDispatchToProps","dispatch","collectionsMap","CollectionOverviewWithLoader","CollectionPageWithLoader","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","setState","render","match","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,UAAP,MAAuB,oDAAvB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvCL,EAAAA,iBAAiB,EAAEM,cAAc,IAAID,QAAQ,CAACL,iBAAiB,CAACM,cAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,MAAMC,4BAA4B,GAAGJ,UAAU,CAACF,mBAAD,CAA/C;AACA,MAAMO,wBAAwB,GAAGL,UAAU,CAACD,cAAD,CAA3C;;AAEA,MAAMO,QAAN,SAAuBd,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCe,KADgC,GACxB;AACPC,MAAAA,OAAO,EAAE;AADF,KADwB;AAAA,SAKhCC,uBALgC,GAKN,IALM;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAAA,UACXb,iBADW,GACW,KAAKc,KADhB,CACXd,iBADW;AAEnB,UAAMe,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GACEC,IADF,CACOC,QAAQ,IAAI;AACjB,YAAMb,cAAc,GAAGP,+BAA+B,CAACoB,QAAD,CAAtD;AACAnB,MAAAA,iBAAiB,CAACM,cAAD,CAAjB;AACA,WAAKc,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KALF;AAMA;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKR,KADf,CACAQ,KADA;AAAA,UAEAX,OAFA,GAEY,KAAKD,KAFjB,CAEAC,OAFA;AAGR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,4BAAD;AAA8B,QAAA,SAAS,EAAEH;AAAzC,SAAsDG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,wBAAD;AAA0B,QAAA,SAAS,EAAEH;AAArC,SAAkDG,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AA5B+B;;AA+BjC,eAAejB,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCK,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithLoader from '../../components/with-loader/with-loader.component';\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nconst CollectionOverviewWithLoader = WithLoader(CollectionsOverview);\nconst CollectionPageWithLoader = WithLoader(CollectionPage);\n\nclass ShopPage extends Component {\n\tstate = {\n\t\tloading: true\n\t}\n\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props;\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tcollectionRef.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t\t\t\tupdateCollections(collectionsMap)\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst { match } = this.props;\n\t\tconst { loading } = this.state;\n\t\treturn (\n\t\t\t<div className='shop-page'>\n\t\t\t\t<Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithLoader isLoading={loading} {...props} />} />\n\t\t\t\t<Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithLoader isLoading={loading} {...props} />} />\n\t\t\t</div>\n\t\t)\n\t}\n} \n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}