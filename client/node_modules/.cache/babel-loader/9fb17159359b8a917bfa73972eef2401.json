{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/Bon/src/components/sign-in/sign-in.component.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"email\",\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"password\",\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      isGoogleSignIn: true,\n      onClick: googleSignInStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/Bon/src/components/sign-in/sign-in.component.js"],"names":["React","Component","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","mapDispatchToProps","dispatch","email","password","SignIn","constructor","props","handleSubmit","event","preventDefault","state","handleChange","target","value","name","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport './sign-in.styles.scss';\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password}))\n})\n\nclass SignIn extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst { emailSignInStart } = this.props;\n\t\tconst { email, password } = this.state;\n\t\temailSignInStart(email, password);\n\t}\n\n\thandleChange = event => {\n\t\tconst { value, name } = event.target;\n\t\tthis.setState({ [name]: value});\n\t}\n\n\trender() {\n\t\tconst { googleSignInStart } = this.props;\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2>I already have an account</h2>\n\t\t\t\t<span>Sign in with your email and password</span>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tname='email' \n\t\t\t\t\t\ttype='email' \n\t\t\t\t\t\tvalue={this.state.email} \n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\trequired \n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tname='password' \n\t\t\t\t\t\ttype='password' \n\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\trequired \n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type='submit'> Sign In </CustomButton>\n\t\t\t\t\t\t<CustomButton \n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tisGoogleSignIn={true}\n\t\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\t> \n\t\t\t\t\t\t\tSign In With Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}