{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { fetchGallerySuccess, fetchGalleryFailure } from './gallery.actions';\nimport GalleryActionTypes from './gallery.types';\n\nconst getMediaList = () => {// return fetch(mediaUrl).then(res => res.json())\n  // \t.then(list => list)\n  // \t.catch(err => err)\n};\n\nexport function* fetchGalleryAsync() {\n  try {\n    const mediaList = yield getMediaList();\n    console.log(mediaList);\n  } catch (err) {\n    yield put(fetchGalleryFailure(err.message));\n  }\n}\nexport function* fetchGalleryStart() {\n  yield takeLatest(GalleryActionTypes.FETCH_GALLERY_START, fetchGalleryAsync);\n}\nexport function* gallerySagas() {\n  yield all([call(fetchGalleryStart)]);\n}","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/Bon/src/redux/gallery/gallery.sagas.js"],"names":["takeLatest","call","put","all","fetchGallerySuccess","fetchGalleryFailure","GalleryActionTypes","getMediaList","fetchGalleryAsync","mediaList","console","log","err","message","fetchGalleryStart","FETCH_GALLERY_START","gallerySagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,mBAAzD;AAEA,OAAOC,kBAAP,MAA+B,iBAA/B;;AAEA,MAAMC,YAAY,GAAG,MAAM,CAC1B;AACA;AACA;AACA,CAJD;;AAMA,OAAO,UAAUC,iBAAV,GAA8B;AACpC,MAAI;AACH,UAAMC,SAAS,GAAG,MAAMF,YAAY,EAApC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,GAHD,CAGE,OAAOG,GAAP,EAAY;AACb,UAAMV,GAAG,CAACG,mBAAmB,CAACO,GAAG,CAACC,OAAL,CAApB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACpC,QAAMd,UAAU,CACfM,kBAAkB,CAACS,mBADJ,EAEfP,iBAFe,CAAhB;AAIA;AAED,OAAO,UAAUQ,YAAV,GAAyB;AAC/B,QAAMb,GAAG,CAAC,CAACF,IAAI,CAACa,iBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport { fetchGallerySuccess, fetchGalleryFailure } from './gallery.actions';\n\nimport GalleryActionTypes from './gallery.types';\n\nconst getMediaList = () => {\n\t// return fetch(mediaUrl).then(res => res.json())\n\t// \t.then(list => list)\n\t// \t.catch(err => err)\n}\n\nexport function* fetchGalleryAsync() {\n\ttry {\n\t\tconst mediaList = yield getMediaList();\n\t\tconsole.log(mediaList)\n\t} catch (err) {\n\t\tyield put(fetchGalleryFailure(err.message))\n\t}\n}\n\nexport function* fetchGalleryStart() {\n\tyield takeLatest(\n\t\tGalleryActionTypes.FETCH_GALLERY_START, \n\t\tfetchGalleryAsync\n\t)\n}\n\nexport function* gallerySagas() {\n\tyield all([call(fetchGalleryStart)])\n}"]},"metadata":{},"sourceType":"module"}